
[language-server.harper-ls]
command = "harper-ls"
args = ["--stdio"]

[language-server.harper-ls.config.harper-ls]
# userDictPath = ""
# fileDictPath = ""
# diagnosticSeverity = "hint"
# isolateEnglish = false
dialect = "Australian"
# maxFileLength = 120000
# 
 [[language]]
name = "markdown"
language-servers = ["marksman", "harper-ls"]
formatter = { command = 'prettier', args = [
  "--parser",
  "markdown",
  "--prose-wrap",
  "never", # <always|never|preserve>
] }

[[language]]
name = "python"
language-servers = [ "ruff", "basedpyright" ]
# formatter = { command = "ruff" , args = ["format", "-"] }
#  formatter = { command = "uvx", args = ["sh", "-c", "ruff check --fix - | ruff format -"] }

[language-server.ruff]
command = "ruff"
args = ["server"]

[language-server.ruff.config.settings.lint]
select = ["E", "F", "W", "B", "I", "RUF", "N", "LOG", "ERA", "W", "D", "UP", "ANN", "ASYNC", "S", "RET", "TCH", "ARG", "PTH", "DOC"]
preview = true

[language-server.basedpyright]
command = "basedpyright-langserver"
args = ["--stdio"]

[language-server.basedpyright.config]
basedpyright.analysis.diagnosticMode = "openFilesOnly"

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
validation = true
completion = true
hover = true
schemaStore.enable = true

[language-server.yaml-language-server.config.yaml.schemas]
"https://json.schemastore.org/github-workflow.json" = ".github/workflows/*.{yml,yaml}"
"https://json.schemastore.org/github-action.json" = ["action.yml", "action.yaml"]
kubernetes = [ "*deployment*.yaml",
 "*service*.yaml",
 "*configmap*.yaml",
 "*secret*.yaml",
 "*pod*.yaml",
 "*namespace*.yaml",
 "*ingress*.yaml" 
]
"https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/kustomization.json" = [
  "*kustomization.yaml",
  "*kustomize.yaml"
]
"https://raw.githubusercontent.com/argoproj/argo-workflows/master/api/jsonschema/schema.json" = [
  "*workflow*.yaml",
  "*template*.yaml"
]

[[ language ]]
name = "rst"
language-servers = [ "esbonio", "harper-ls" ]

[language-server.esbonio]
command = "esbonio"

# [[language]]
# name = "autoconf"
# scope = "source.autoconf"
# language-servers = [ "autoconf-language-server",]

[[language]]
name = "make"
scope = "source.makefile"
language-servers = [ "make-language-server" ]

[language-server.autoconf-language-server]
command = "autoconf-language-server"

[language-server.make-language-server]
command = "make-language-server"
