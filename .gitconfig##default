[user]
	name = Damien Ayers
	email = damien@omad.net
	signingkey = 1649A37AC79DAC84
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[fetch]
	# Auto delete deleted remote tracking branches
	prune = true
	prunetags = true
[push]
	default = current
[core]
	autocrlf = input
	safecrlf = warn
	excludesfile = ~/.gitignore_global
	editor = vim
	pager = delta
[branch]
	# automatically sets the upstream of new branches to the branch you based it on
	autoSetupRebase = always
	# Sort the output of branches to show most recently committed to branches first.
[commit]
	# Include the entire diff when editing commit messages
	verbose = true
#	gpgsign = true
[log]
	# Show datetimes in my local time zone, instead of the timezone of the committer/author
	date = local
[tag]
	# Change the sort order of git tag to sort tags numerically and respect version numbers. This way, v10 comes after v9 instead of v1.
	sort = version:refname
[alias]
	lg = log --color --graph --pretty=format:'%C(yellow)%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    # Last branches
    lb = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
	dl = "!git ll -1"
	dlc = diff --cached HEAD^
	st = status -s
    hist = log --color --pretty=format:\"%C(yellow)%h%C(reset) %s%C(bold red)%d%C(reset) %C(green)%ad%C(reset) %C(blue)[%an]%C(reset)\" --relative-date --decorate
    graph = log --color --graph --pretty=format:\"%h | %ad | %an | %s%d\" --date=short

	recent = ! git branch --sort=-committerdate --format=\"%(committerdate:relative)%09%(refname:short)\" | head -10
	smartlog = log --graph --pretty=format:'commit: %C(bold red)%h%Creset %C(red)[%H]%Creset %C(bold magenta)%d %Creset%ndate: %C(bold yellow)%cd %Creset%C(yellow)%cr%Creset%nauthor: %C(bold blue)%an%Creset %C(blue)[%ae]%Creset%n%C(cyan)%s%n%Creset'
	sl = smartlog

	# reset commands {{{
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard
	branches = !legit branches
	graft = !legit graft
	harvest = !legit harvest
	publish = !legit publish
	unpublish = !legit unpublish
	sprout = !legit sprout
	sync = !legit sync
	switch = !legit switch
	resync = !legit resync
	# }}}
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[pull]
	rebase = true

[merge]
	conflictstyle = zdiff3
	tool = meld

[diff "jupyternotebook"]
	command = git-nbdiffdriver diff
[merge "jupyternotebook"]
	driver = git-nbmergedriver merge %O %A %B %L %P
	name = jupyter notebook merge driver
[difftool "nbdime"]
	cmd = git-nbdifftool diff \"$LOCAL\" \"$REMOTE\"
[difftool]
	prompt = false
[mergetool "nbdime"]
	cmd = git-nbmergetool merge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"
[mergetool]
	prompt = false

[diff]
	# Use difftastic for displaying diffs
	tool = difft
	# Used to be tool = vimdiff

	algorithm = histogram
	# histogram = patience is another good option
[magithub]
	online = true
[magithub "status"]
	includeStatusHeader = false
	includePullRequestsSection = false
	includeIssuesSection = false

[include]
    path = ~/.private/gitconfig
[hub]
	protocol = ssh
[github]
	user = omad
[init]
	defaultBranch = main

#[url "git@github.com:"]
#	insteadOf = "https://github.com/"
#[url "git@bitbucket.net:"]
#	insteadOf = "https://bitbucket.net/"

[ghq]
  root = ~/dev
  root = ~/go/src
[rerere]
	enabled = true
